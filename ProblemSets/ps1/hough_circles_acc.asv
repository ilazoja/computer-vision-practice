function H = hough_circles_acc(BW, radius)
    % Compute Hough accumulator array for finding circles.
    %
    % BW: Binary (black and white) image containing edge pixels
    % radius: Radius of circles to look for, in pixels

    % TODO: Your code here
    
    [y, x] = find(BW~=0);
    aarray = [];
    barray = [];
    theta = 90 + 1;
    for edgeIndex = 1:size(y)
        for angle = -90:89
            a = x - radius*cosd(angle);
            b = y + radius*sing(angle);
            aarray(edgeIndex, angle + theta) = a;
            barray(edgeIndex, angle + theta) = b;
            %d = uint8(d);
            %H(d, angle) = H(d, angle) + 1;
        end
    end 
    
    % avoid negatives and round to have it as integer
    rho = min(aarray(:), barray(:)) - 1;
    aarray = uint16((aarray - rho));
    barray = uint16((barray - rho));
    darray = uint16(darray);
    
    % put into bins
    maximum = max(darray(:));
    bins = 1:rhoStep:maximum+rhoStep;
    darray = discretize(darray,bins);
    H = zeros(max(darray(:)), size(darray,2));
    index = 1;
    for edgeindex = 1:size(darray,1)
        for angle = 1:size(darray,2)
            
            d = darray(edgeindex,angle);

            H(d, angle) = H(d, angle) + 1;    
            index = index + 1;
        end
    end
 %   imshow(H, [0,max(H(:))]);
end
